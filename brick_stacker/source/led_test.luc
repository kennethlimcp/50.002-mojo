module led_test (
  input clk,  // clock
  input rst,  // reset
  output a[16],
  output c[16]
  ) {

    .clk(clk) {
      // The reset conditioner is used to synchronize the reset signal to the FPGA
      // clock. This ensures the entire FPGA comes out of reset at the same time.
      .rst(rst){
        counter slowclock(#SIZE(1),#DIV(10));  //smaller the faster the refresh
      }
    }

    .clk(slowclock.value) {
     fsm state (#INIT(ONE)) = {ONE,TWO, THREE};
     dff cSignal[16](.rst(rst));
     dff aSignal[16](.rst(rst));
    }

    always {
      a = h0000;
      c = hFFFF;

      state.d=state.q;

      case(state.q){
        state.ONE:

        a = h0000;
        c = h00FF;

        aSignal.d = h0000;
        cSignal.d = hFFFF;

        state.d = state.TWO;

        //switch cathode selection
        state.TWO:

        if(cSignal.q == hFFFF) {
          cSignal.d = hFFFE;
        }
        else if(cSignal.q == h7FFF) {
          cSignal.d = hFFFE;
        }
        else {
          cSignal.d = (cSignal.q << 1) + 1;
        }

        a = aSignal.q;
        c = cSignal.q;
        state.d=state.THREE;

        //switch anode selection
        state.THREE:

        if(aSignal.q == h0000) {
          aSignal.d = h0001;
          state.d = state.THREE;
        }
        else if(aSignal.q == h8000) {
          aSignal.d = h0001;
          state.d = state.TWO;
        }
        else {
          aSignal.d = (aSignal.q << 1);
          state.d = state.THREE;
        }

        a = aSignal.q;
        c = cSignal.q;
      }
    }
  }
