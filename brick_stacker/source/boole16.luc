/*
A   B|  F0  F1  F2  F3  F4  F5  F6  F7
0   0|  0   0   0   0   0   0   0   0
0   1|  0   0   0   0   1   1   1   1
1   0|  0   0   1   1   0   0   1   1
1   1|  0   1   0   1   0   1   0   1

A   B|  F8  F9  F10 F11 F12 F13 F14 F15
0   0|  1   1   1   1   1   1   1   1
0   1|  0   0   0   0   1   1   1   1
1   0|  0   0   1   1   0   0   1   1
1   1|  0   1   0   1   0   1   0   1

function            symbol          name
F0                  0               FALSE
F1                  A ^ B           AND
F2                  A ^ !B          A AND NOT B
F3                  A               A
F4                  !A ^ B          NOT A AND B
F5                  B               B
F6                  A xor B         XOR
F7                  A v B           OR
F8                  A nor B         NOR
F9                  A XNOR B        XNOR
F10                 !B              NOT B
F11                 A v !B          A OR NOT B
F12                 !A              NOT A
F13                 !A v B          NOT A OR B
F14                 A nand B        NAND
F15                 1               TRUE
*/

module boole16 (
    input a[16],
    input b[16],
    input alufn[6],
    output out[16]
  ) {

  always {
   case(alufn[3:0]) {
    4b0000:
      out = 0;      //0
    4b0110:
      out = a ^ b;  //xor
    4b1000:
      out = a & b;  //and
    4b1001:
      out = a ~^ b; //xnor
    4b1010:
      out = a;
    4b1100:
      out = b;
    4b1110:
      out = a | b;  //or
    default:
      out = 0;
    }
  }
}
